name: Validate Railway Deployment

on:
  push:
    branches: [main]
    paths:
      - 'nixpacks.toml'
      - 'railway.json'
      - 'Procfile'
      - 'backend/**'
      - 'frontend-app/**'
  pull_request:
    branches: [main]
    paths:
      - 'nixpacks.toml'
      - 'railway.json'
      - 'Procfile'
      - 'backend/**'
      - 'frontend-app/**'
  workflow_dispatch:

jobs:
  validate-railway-config:
    name: Validate Railway Configuration Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate nixpacks.toml exists
        run: |
          if [ -f nixpacks.toml ]; then
            echo "✓ nixpacks.toml exists"
          else
            echo "✗ nixpacks.toml not found"
            exit 1
          fi

      - name: Validate railway.json exists
        run: |
          if [ -f railway.json ]; then
            echo "✓ railway.json exists"
          else
            echo "✗ railway.json not found"
            exit 1
          fi

      - name: Validate Procfile exists
        run: |
          if [ -f Procfile ]; then
            echo "✓ Procfile exists"
          else
            echo "✗ Procfile not found"
            exit 1
          fi

      - name: Validate nixpacks.toml syntax
        run: |
          # Check for required sections
          if grep -q "\[phases.setup\]" nixpacks.toml; then
            echo "✓ phases.setup section found"
          else
            echo "✗ phases.setup section missing"
            exit 1
          fi
          
          if grep -q "\[phases.build\]" nixpacks.toml; then
            echo "✓ phases.build section found"
          else
            echo "✗ phases.build section missing"
            exit 1
          fi
          
          if grep -q "\[start\]" nixpacks.toml; then
            echo "✓ start section found"
          else
            echo "✗ start section missing"
            exit 1
          fi

      - name: Validate railway.json syntax
        run: |
          # Validate JSON syntax
          if python3 -m json.tool railway.json > /dev/null 2>&1; then
            echo "✓ railway.json is valid JSON"
          else
            echo "✗ railway.json has invalid JSON syntax"
            exit 1
          fi

      - name: Check required build commands in nixpacks.toml
        run: |
          # Check that frontend build is present
          if grep -q "cd frontend-app && npm ci && npm run build" nixpacks.toml; then
            echo "✓ Frontend build command found"
          else
            echo "⚠ Frontend build command may be missing"
          fi
          
          # Check that backend build is present
          if grep -q "mvn clean package" nixpacks.toml; then
            echo "✓ Backend build command found"
          else
            echo "✗ Backend build command missing"
            exit 1
          fi

      - name: Validate JAR file reference in start command
        run: |
          if grep -q "ecompta-ia-light-2.0.0.jar" nixpacks.toml && grep -q "ecompta-ia-light-2.0.0.jar" Procfile; then
            echo "✓ JAR file reference consistent across files"
          else
            echo "⚠ JAR file reference may be inconsistent"
          fi

  test-railway-build-simulation:
    name: Simulate Railway Build Process
    runs-on: ubuntu-latest
    needs: validate-railway-config
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Simulate Railway frontend build
        run: |
          echo "Simulating Railway frontend build..."
          cd frontend-app
          npm ci
          npm run build
          echo "✓ Frontend build successful"

      - name: Simulate Railway backend integration
        run: |
          echo "Simulating Railway backend integration..."
          cd backend
          mkdir -p src/main/resources/static
          cp -r ../frontend-app/build/* src/main/resources/static/
          echo "✓ Frontend copied to backend static resources"

      - name: Simulate Railway backend build
        run: |
          echo "Simulating Railway backend build..."
          cd backend
          mvn clean package -DskipTests
          echo "✓ Backend build successful"

      - name: Verify JAR exists
        run: |
          if [ -f backend/target/ecompta-ia-light-2.0.0.jar ]; then
            JAR_SIZE=$(ls -lh backend/target/ecompta-ia-light-2.0.0.jar | awk '{print $5}')
            echo "✓ JAR file created successfully (Size: $JAR_SIZE)"
          else
            echo "✗ JAR file not found"
            exit 1
          fi

      - name: Verify frontend is integrated
        run: |
          if [ -d backend/src/main/resources/static ] && [ -f backend/src/main/resources/static/index.html ]; then
            echo "✓ Frontend successfully integrated into backend"
          else
            echo "✗ Frontend not properly integrated"
            exit 1
          fi

  validate-environment-variables:
    name: Validate Required Environment Variables Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check Railway documentation exists
        run: |
          if [ -f RAILWAY_DEPLOYMENT.md ]; then
            echo "✓ RAILWAY_DEPLOYMENT.md exists"
          else
            echo "⚠ RAILWAY_DEPLOYMENT.md not found"
          fi

      - name: Check for environment variable documentation
        run: |
          if [ -f RAILWAY_DEPLOYMENT.md ]; then
            if grep -q "JWT_SECRET" RAILWAY_DEPLOYMENT.md; then
              echo "✓ JWT_SECRET documented"
            else
              echo "⚠ JWT_SECRET not documented"
            fi
            
            if grep -q "DATABASE_URL" RAILWAY_DEPLOYMENT.md; then
              echo "✓ DATABASE_URL documented"
            else
              echo "⚠ DATABASE_URL not documented"
            fi
          fi

      - name: Check application properties for Railway profile
        run: |
          if [ -f backend/src/main/resources/application-railway.yml ] || grep -q "railway" backend/src/main/resources/application.yml 2>/dev/null; then
            echo "✓ Railway profile configuration exists"
          else
            echo "⚠ Railway profile configuration may be missing"
          fi
